{"version":3,"sources":["components/News.js","components/MyModal.js","libs/constants.js","components/Wiki.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["News","newsParam","news","handleResumeSpeechRecognition","special","decimal","speech","useRef","Speech","reduce","acc","element","content","useEffect","curSpeech","current","init","voice","then","text","map","n","i","Math","floor","stringifyNumber","join","speak","listeners","onend","console","log","cancel","type","className","onClick","key","data-aos","title","src","urlToImage","alt","replace","href","url","target","MyModal","props","useState","show","setShow","Modal","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","REGEXWIKI","CurStage","WEEKDAY","Wiki","wiki","wikiBody","setWikiBody","question","Constants","split","word","character","toUpperCase","axios","get","pages","data","query","firstKey","Object","keys","tempWikiBody","extract","catch","e","Weather","errMsg","setErrMsg","cityInfo","setCityInfo","weatherInfo","setWeatherInfo","fahrenheitToCelsius","ferenheit","window","navigator","geolocation","getCurrentPosition","position","process","coords","latitude","longitude","res","cityId","Key","cityName","EnglishName","tempWeather","DailyForecasts","forEach","dailyForecast","index","Temperature","Minimum","Value","Maximum","tempDate","Date","formattedDayOfWeek","getDay","formattedDay","getDate","getMonth","weatherInfoForTTS","Day","IconPhrase","Night","style","maxWidth","Icon","fontSize","App","recognition","SpeechRecognition","webkitSpeechRecognition","speechOnAudio","Audio","curStage","setCurStage","checkRestart","setCheckRestart","matchCmd","setMatchCmd","setNews","setWiki","weatherQuestion","setWeatherQuestion","isStarting","interimResults","lang","start","addEventListener","transcript","results","result","isFinal","AOS","duration","offset","handleCurrentStage","transcriptCompare","toLowerCase","play","includes","tempNews","articles","cornify_add","test","trim","handleMatchCmd","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1bdbee47.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useRef} from 'react'\nimport Speech from 'speak-tts';\n\nfunction News({news: newsParam, handleResumeSpeechRecognition}) {\n  const special = ['zeroth','first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth', 'tenth', 'eleventh', 'twelfth', 'thirteenth', 'fourteenth', 'fifteenth', 'sixteenth', 'seventeenth', 'eighteenth', 'nineteenth'];\n  const decimal = ['twent', 'thirt', 'fort', 'fift', 'sixt', 'sevent', 'eight', 'ninet'];\n  const speech = useRef(new Speech());\n  // if content is null, just chuck it away\n  const news = [...newsParam].reduce((acc, element) => element.content ? [...acc, element] : acc, []);\n\n  const stringifyNumber = (n) => {\n    if (n < 20) return special[n];\n    if (n % 10 === 0) return decimal[Math.floor(n / 10) - 2] + 'ieth';\n    return decimal[Math.floor(n / 10) -2] + 'y-' + special[n % 10];\n  };\n\n  useEffect(() => {\n    const curSpeech = speech.current;\n    curSpeech.init({\n      voice:'Google UK English Male'\n    }).then(() => {\n      const text = news.map((n, i) => !n.content ? '' : `The ${stringifyNumber(i + 1)} news is ... ${n.content} ...`).join('');\n\n      curSpeech.speak({\n        text: text,\n        listeners: {\n          onend: () => {\n            console.log('TTS ended');\n          }\n        }\n      }).then(() => {\n        console.log('TTS finished')\n        handleResumeSpeechRecognition();\n      });\n    });\n\n    return () => {\n      curSpeech.cancel();\n    }\n\n  }, []);\n\n\n  return (\n    <Fragment>\n      <button type=\"button\" className=\"btn btn-warning btn-block mb-4\" onClick={() => {\n          if(speech) {\n            console.log('TTS canceled');\n            speech.current.cancel();\n            handleResumeSpeechRecognition();\n          }\n        }}>Stop Playing Audio</button>\n      {\n        news.map((n, i) =>\n          <div className=\"card mb-4\" key={`news_${i}`} data-aos={i % 2 === 0 ? \"fade-right\": \"fade-left\"}>\n            <h3 className=\"card-header\">{n.title}</h3>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <img className=\"col-12 col-sm-5 col-md-3\" src={n.urlToImage} alt=\"news iamge\" />\n                <div className=\"card-text col-12 col-sm-7 col-md-9\">\n                  <p>{n.content && n.content.replace(/(<([^>]+)>)/gi, \"\")}</p>\n                  <p>Link : <a href={`${n.url}`} target=\"#blank\">{` ${n.url}`}</a></p>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </Fragment>\n  )\n}\n\nexport default News;\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction MyModal(props) {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    props.onClick();\n    setShow(false);\n  };\n\n  return (\n    <Modal show={show} backdrop=\"static\" keyboard={false}>\n      <Modal.Header>\n        <Modal.Title>Please confirm the audio permission</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>This speech recognition app needs the audio permission. Please select OK button.</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={handleClose}>OK</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default MyModal;","export const REGEXWIKI = /^(who is )|(what is)|(explain about)|(explain )|(tell me about )/;\nexport const CurStage = {\n  BeforeTrigger: 'BeforeTrigger',\n  AfterTriggerFirst: 'AfterTriggerFirst',\n  AfterTrigger: 'AfterTrigger',\n  DuringProcessing: 'DuringProcessing'\n}\nexport const WEEKDAY = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];","import React, { Fragment, useRef, useEffect, useState } from 'react';\nimport Speech from 'speak-tts';\nimport axios from 'axios';\nimport * as Constants from '../libs/constants';\n\nfunction Wiki({wiki, handleResumeSpeechRecognition}) {\n  const speech = useRef(new Speech());\n  const [wikiBody, setWikiBody] = useState('');\n\n  useEffect(() => {\n    const curSpeech = speech.current;\n    const question = wiki.replace(Constants.REGEXWIKI, '').split(' ').map(word => word.split('').map((character, i) => i === 0 ? character.toUpperCase() : character).join('')).join(' ');\n    axios.get(`https://en.wikipedia.org/w/api.php?format=json&origin=*&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${question}`)\n      .then(({data: {query: {pages}}}) => {\n        const firstKey = Object.keys(pages)[0];\n        const tempWikiBody = firstKey === '-1' ? `There is no information about ${question}` : pages[firstKey].extract;\n\n        curSpeech.init({\n          voice: 'Google UK English Male'\n        }).then(() => {\n          curSpeech.speak({\n            text: tempWikiBody,\n            listeners: {\n              onend: () => {\n                console.log('TTS ended');\n              }\n            }\n          }).then(() => {\n            console.log('TTS finished')\n            handleResumeSpeechRecognition();\n          }).catch(e => {\n            console.log('TTS error')\n          });\n        });\n        \n        setWikiBody(tempWikiBody);\n      });\n  }, [])\n\n  return (\n    <Fragment>\n      <button type=\"button\" className=\"btn btn-warning btn-block mb-4\" onClick={() => {\n          if(speech) {\n            console.log('TTS canceled');\n            speech.current.cancel();\n            handleResumeSpeechRecognition();\n          }\n        }}>Stop Playing Audio</button>\n      {\n        <div className=\"card mb-4\" data-aos=\"fade-up\">\n          <h3 className=\"card-header\">{wiki}</h3>\n          <p className=\"card-body\">{wikiBody}</p>\n        </div>\n      }\n    </Fragment>\n  )\n}\n\nexport default Wiki;\n","import React, { useRef, useEffect, useState, Fragment }from 'react';\nimport * as Constants from '../libs/constants'\nimport Speech from 'speak-tts';\nimport axios from 'axios';\n\n\nfunction Weather({question, handleResumeSpeechRecognition}) {\n  const speech = useRef(new Speech());\n  const [errMsg, setErrMsg] = useState('');\n  const [cityInfo, setCityInfo] = useState(null);\n  const [weatherInfo, setWeatherInfo] = useState(null);\n\n  const fahrenheitToCelsius = (ferenheit) => Math.floor((ferenheit - 32) * 5 / 9);\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      axios.get(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${process.env.REACT_APP_ACCUWEATHER_API_KEY}&q=${position.coords.latitude},${position.coords.longitude}`)\n        .then(res => {\n          const cityId = res.data.Key;\n          const cityName = res.data.EnglishName;\n          if(!cityId) {\n            setErrMsg('Counldn\\'t find the city name!')\n            handleResumeSpeechRecognition();\n            setCityInfo(null);\n            setWeatherInfo(null);\n            return;\n          }\n          setCityInfo(res.data);\n          axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?apikey=${process.env.REACT_APP_ACCUWEATHER_API_KEY}`)\n            .then(res => {\n              console.log('res:', res)\n              let tempWeather = {...res.data}\n              tempWeather.DailyForecasts.forEach((dailyForecast, index) => {\n                tempWeather.DailyForecasts[index].Temperature.Minimum.Value = fahrenheitToCelsius(dailyForecast.Temperature.Minimum.Value);\n                tempWeather.DailyForecasts[index].Temperature.Maximum.Value = fahrenheitToCelsius(dailyForecast.Temperature.Maximum.Value);\n                const tempDate = new Date(dailyForecast.Date);\n                tempWeather.DailyForecasts[index].formattedDayOfWeek = Constants.WEEKDAY[tempDate.getDay()];\n                tempWeather.DailyForecasts[index].formattedDay = `${tempDate.getDate()} / ${tempDate.getMonth()}`;\n              });\n              const curSpeech = speech.current;\n              const weatherInfoForTTS = `Welcome to Jason's Weather forecast. Now, let’s see what the weather is like today in ${cityName}.`\n                + `Today, temperature is ${tempWeather.DailyForecasts[0].Temperature.Minimum.Value} degree to ${tempWeather.DailyForecasts[0].Temperature.Maximum.Value} degree.`\n                + ` It will be ${tempWeather.DailyForecasts[0].Day.IconPhrase} for most of the day,`\n                + ` and, ${tempWeather.DailyForecasts[0].Night.IconPhrase} in the evening.`\n                + ` Tomorrow, temperature is ${tempWeather.DailyForecasts[1].Temperature.Minimum.Value} degree to ${tempWeather.DailyForecasts[1].Temperature.Maximum.Value} degree.`\n                + ` It will be ${tempWeather.DailyForecasts[1].Day.IconPhrase} for most of the day,`\n                + ` and, ${tempWeather.DailyForecasts[1].Night.IconPhrase} in the evening.`;\n              curSpeech.init({\n                voice: 'Google UK English Male'\n              }).then(() => {\n                curSpeech.speak({\n                  text: weatherInfoForTTS,\n                  listeners: {\n                    onend: () => {\n                      console.log('TTS ended');\n                    }\n                  }\n                }).then(() => {\n                  console.log('TTS finished')\n                  handleResumeSpeechRecognition();\n                }).catch(e => {\n                  console.log('TTS error')\n                });\n              });\n\n              setWeatherInfo(tempWeather);\n          });\n      });\n    });\n\n  }, []);\n\n  return (\n    <div>\n      <h3>{errMsg}</h3>\n      {\n        cityInfo && weatherInfo &&\n        <Fragment>\n          <button type=\"button\" className=\"btn btn-warning btn-block mb-4\" onClick={() => {\n            if(speech) {\n              console.log('TTS canceled');\n              speech.current.cancel();\n              handleResumeSpeechRecognition();\n            }\n          }}>Stop Playing Audio</button>\n          <h2 className=\"text-center\">{cityInfo.EnglishName}</h2>\n          {\n            weatherInfo.DailyForecasts.map((dailyForecast,i) =>\n              <div className=\"card mb-4\" key={`forecast_${i}`} data-aos={i % 2 === 0 ? \"fade-right\": \"fade-left\"}>\n                <div className=\"row d-flex align-items-center justify-content-center\">\n                  <div className=\"col-3 col-sm-3 col-md-2\">\n                    <div className=\"text-center\"><strong>{dailyForecast.formattedDayOfWeek}</strong></div>\n                    <div className=\"text-center\">{dailyForecast.formattedDay}</div>\n                  </div>\n                  <img className=\"col-3 col-sm-2 col-md-2 py-3\" style={{maxWidth: \"100px\"}} src={`https://www.accuweather.com/images/weathericons/${dailyForecast.Day.Icon}.svg`} alt=\"\"/>\n                  <div className=\"col-5 col-sm-3 col-md-2\">\n                    <span style={{fontSize: '2em'}}>{`${dailyForecast.Temperature.Maximum.Value}\\u00b0`}</span>\n                    <span style={{fontSize: '1.2em'}}>{`/ ${dailyForecast.Temperature.Minimum.Value}\\u00b0`}</span>\n                  </div>\n                  <div className=\"col-12 col-sm-12 col-md-5 mb-3 mb-md-0 px-sm-0 text-center\" style={{fontSize: '1.5em'}}>{dailyForecast.Day.IconPhrase}</div>\n                </div>\n              </div>\n            )\n          }\n        </Fragment>\n      }\n    </div>\n  )\n};\n\nexport default Weather;\n","import React, { useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport News from './components/News';\nimport MyModal from './components/MyModal';\nimport Wiki from './components/Wiki';\nimport * as Constants from './libs/constants'\nimport Weather from './components/Weather';\n\nfunction App() {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n  const speechOnAudio = new Audio(process.env.PUBLIC_URL + '/SpeechOn.wav');\n  // const speechEndAudio = new Audio(process.env.PUBLIC_URL + '/SpeechEnd.wav');\n\n  const [curStage, setCurStage] = useState(Constants.CurStage.BeforeTrigger);\n  const [checkRestart, setCheckRestart] = useState(false);\n  const [matchCmd, setMatchCmd] = useState('');\n  const [news, setNews] = useState([]);\n  const [wiki, setWiki] = useState('');\n  const [weatherQuestion, setWeatherQuestion] = useState('');\n  const isStarting = useRef(false);\n\n  recognition.interimResults = true;\n  recognition.lang = 'en-US';\n\n  // tricky handling to play sound without User interaction later\n  const handleInitiateAudioClick = () => {\n    console.log('handleInitiateAudioClick');\n\n    setCurStage(Constants.CurStage.AfterTrigger);\n    setMatchCmd('weather');\n    return;\n\n    speechOnAudio.play().then(() => {\n      speechOnAudio.pause();\n      recognition.start();\n    });\n  }\n\n  // When finishing each response, start speech recognition again to get another 'ok jason'\n  const handleResumeSpeechRecognition = () => {\n    if (isStarting.current === true) {\n      console.log('handleResumeSpeechRecognition, but doesn\\'t do anything due to the duplication');\n      return;\n    }\n    console.log('handleResumeSpeechRecognition')\n\n    setCurStage(Constants.CurStage.BeforeTrigger);\n    setMatchCmd('');\n    setCheckRestart(false);\n    recognition.start();\n  };\n\n  // recognition event listeners\n  recognition.addEventListener('result', e => {\n    const transcript = [...e.results].map(result => result[0].transcript).join('');\n\n    if(e.results[0].isFinal) {\n      setMatchCmd(transcript)\n    }\n  });\n\n  recognition.addEventListener('start', () => {\n    console.log('Speech recognition started');\n    isStarting.current = true;\n  });\n\n  recognition.addEventListener('end', () => {\n    console.log(\"Speech recognition ended, checkRestart = \" + checkRestart);\n    isStarting.current = false;\n    setCheckRestart(true);\n  });\n\n  // useEffect series\n  useEffect(() => {\n    console.log(window);\n\n    window.AOS.init({\n      duration: 1500,\n      offset: 200\n    });\n  }, []);\n\n  useEffect(() => {\n    const handleCurrentStage = () => {\n      switch (curStage) {\n        case Constants.CurStage.BeforeTrigger:\n          console.log('BeforeTrigger is set')\n          break;\n        case Constants.CurStage.AfterTrigger:\n          console.log('AfterTrigger is set')\n          break;\n        case Constants.CurStage.DuringProcessing:\n          console.log('DuringProcessing is set')\n          break;\n        default:\n          break;\n      }\n    }\n    handleCurrentStage();\n  }, [curStage]);\n\n  useEffect(() => {\n    const handleCheckRestart = () => {\n      console.log(`handleCheckRestart, checkRestart = ${checkRestart}, curStage = ${curStage}`);\n      if(checkRestart) {\n        if(curStage === Constants.CurStage.BeforeTrigger) {\n          setCheckRestart(false);\n          recognition.start();\n        } else if(curStage === Constants.CurStage.AfterTriggerFirst) {\n          setCheckRestart(false);\n          recognition.start();\n          setCurStage(Constants.CurStage.AfterTrigger);\n        } else if(curStage === Constants.CurStage.AfterTrigger) {\n          handleResumeSpeechRecognition();\n        }\n      }\n    };\n    handleCheckRestart();\n  }, [checkRestart]);\n\n  useEffect(() => {\n    const handleMatchCmd = () => {\n      if(matchCmd === '') {\n        return;\n      }\n\n      console.log(`handleMatchCmd, curStage = ${curStage}`);\n      const transcriptCompare = matchCmd.toLowerCase();\n      console.log('transcriptCompare:', transcriptCompare)\n\n      switch(curStage) {\n        case Constants.CurStage.BeforeTrigger:\n          if (transcriptCompare === 'ok jason') {\n            speechOnAudio.play();\n            setNews([]);\n            setCurStage(Constants.CurStage.AfterTriggerFirst);\n            setMatchCmd('');\n            setWiki('');\n            setWeatherQuestion('');\n          }\n          break;\n        case Constants.CurStage.AfterTrigger:\n          if (transcriptCompare.includes('news')) {\n            axios.get(`http://newsapi.org/v2/top-headlines?country=au&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`)\n              .then((res) => {\n                let tempNews = res.data.articles.map(news => {\n                  news.content = news.content && news.content.replace(/… \\[\\+\\d+ chars\\]/, '');\n                  return news;\n                });\n\n                console.log('tempNews:', tempNews)\n                setNews(tempNews);\n                setCurStage(Constants.CurStage.DuringProcessing);\n                setCheckRestart(false);\n                setMatchCmd('');\n                recognition.start();\n              });\n          } else if (transcriptCompare.includes('unicorn')) {\n            console.log('unicorn')\n            window.cornify_add();\n            window.cornify_add();\n            window.cornify_add();\n            setCurStage(Constants.CurStage.BeforeTrigger);\n            setCheckRestart(false);\n            setMatchCmd('');\n          } else if (transcriptCompare.includes('weather')) {\n            setWeatherQuestion(matchCmd);\n          } else if (Constants.REGEXWIKI.test(transcriptCompare)) {\n            if (transcriptCompare.replace(Constants.REGEXWIKI, '').trim() !== '') {\n              setCurStage(Constants.CurStage.DuringProcessing);\n              setWiki(matchCmd);\n            }\n          } else {\n            handleResumeSpeechRecognition();\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    handleMatchCmd();\n  }, [matchCmd]);\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"jumbotron\">\n        <MyModal onClick={handleInitiateAudioClick} />\n        <h1 className=\"display-4 text-center\">Say \"OK Jason\"</h1>\n        <div className={`text-center display-3 mb-2 ${curStage === Constants.CurStage.AfterTrigger || curStage === Constants.CurStage.AfterTriggerFirst ? \"text-danger\" : \"text-dark\"}`}>\n          <i className=\"fas fa-microphone-alt\"></i>\n        </div>\n        <p className=\"text-center\">{matchCmd || '...'}</p>\n      </div>\n      <div className=\"container\">\n        {news && news.length !== 0 && <News news={news} handleResumeSpeechRecognition={handleResumeSpeechRecognition}/>}\n        {wiki && <Wiki wiki={wiki} handleResumeSpeechRecognition={handleResumeSpeechRecognition}/>}\n        {weatherQuestion && <Weather question={weatherQuestion} handleResumeSpeechRecognition={handleResumeSpeechRecognition}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}